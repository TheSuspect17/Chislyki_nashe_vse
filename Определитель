import numpy as np
from numpy import linalg as LA
import copy
import time


def opredelitel(matrix,mult):
    porydok_matrix = len(matrix)
    if porydok_matrix == 1:
        return mult*matrix[0][0]
    else:
        sign = -1
        sum = 0
    for i in range(porydok_matrix): # 0 1
        minor = []
        for j in range(1, porydok_matrix): # 1
            stroka_minora = []
            for k in range(porydok_matrix): # 0 1
                if k != i:
                    stroka_minora.append(matrix[j][k])

            minor.append(stroka_minora)
        sign *= -1
        sum += mult * opredelitel(minor, sign * matrix[0][i])
    return sum


while True:
    m = input('Введите число строк матрицы: ')
    if not m.isdigit():
        print("Вы ввели некорректное число строк, повторите попытку: ")
    else:
        break
while True:
    n = input('Введите число столбцов матрицы: ')
    if not n.isdigit():
        print("Вы ввели некорректное число столбцов, повторите попытку: ")
    else:
        break
m = int(m)
n = int(n)
while True:
    if m <0:
        m = int(input('Вы ввели некорректное число строк, повторите попытку: '))
    if n<0:
        n = int(input('Вы ввели некорректное число столбцов, повторите попытку: '))
    if n == 0 and m != 0 or m == 0 and n!=0:
        print('Данной матрицы не существует, клоун')
        m = int(input('Введите корректное число строк: '))
        n = int(input('Введите корректное число столбцов: '))
        break
    else:
        break

mtrx = [[0 for j in range(n)]for i in range (m)]

for i in range (m):
    for j in range (n):
        k = input(f'Введите значение ячейки а{i}{j}:')
        mtrx[i][j] = complex(k)
start_time = time.perf_counter()       
print(opredelitel(mtrx,1))
stop_time = time.perf_counter()       
print(stop_time - start_time, 'seconds')

start_time = time.perf_counter()     
print(np.linalg.det(mtrx))
stop_time = time.perf_counter()    
print(stop_time - start_time, 'seconds')
