def Jacobi(A,b,x_0,n):
    x=x_0.copy()
    y=x_0.copy()
    k=0
    key_value=[x]
    while(k<6):
        for i in range(n):
            sum_value=0
            for j in range(n):
                if j!=i:
                    sum_value=sum_value+A[i][j]*x[j]
            y[i]=(b[i]-sum_value)/A[i][i]
        x=y.copy()
        k=k+1
        key_value.append(x)
    return x,key_value

A_value=[[1,2],[3,4]]
b=[10,20]
x_0=np.zeros(len(A_value))
experiment_value=Jacobi(A_value,b,x_0,len(A_value))[0]
key=Jacobi(A_value,b,x_0,len(A_value))[1]

x=[]
y=[]
for i in range(7):
    x.append(int(key[i][0]))
    y.append(int(key[i][1]))
print(x)
print(y)

step=np.zeros((13,2))

for i in range(13):
    if i%2==0:
        step[i]=key[i//2]
    else:
        step[i]=[key[(i+1)//2][0],key[i//2][1]]

append_x=[]
append_y=[]
for i in range(13):
    append_x.append(step[i][0])
    append_y.append(step[i][1])
print(append_x)
print(append_y)
